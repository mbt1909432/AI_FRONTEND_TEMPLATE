on:
  push:
    branches: [ main ]
  workflow_dispatch: # 允许手动触发

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: chat-to-agent

jobs:
  build-and-deploy:
    name: 构建并部署 Chat-to-Agent 前端应用
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}

      - name: 更新 known_hosts 文件
        run: |
          mkdir -p ~/.ssh 
          ssh-keyscan ${{ secrets.HOST_NAME }} >> ~/.ssh/known_hosts

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.GIT_USER }}
          password: ${{ secrets.GIT_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          cache-from: type=gha,scope=chat-to-agent
          cache-to: type=gha,mode=max,scope=chat-to-agent
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ secrets.GIT_USER }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ secrets.GIT_USER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Deploy to server
        run: |
          ssh root@${{ secrets.HOST_NAME }} "mkdir -p ~/chat-to-agent"
          scp docker-compose.yml root@${{ secrets.HOST_NAME }}:~/chat-to-agent/docker-compose.yml
          ssh root@${{ secrets.HOST_NAME }} "
            export GIT_USER=${{ secrets.GIT_USER }} &&
            docker login --username ${{ secrets.GIT_USER }} --password ${{ secrets.GIT_TOKEN }} ${{ env.REGISTRY }} &&
            cd ~/chat-to-agent &&
            docker compose pull &&
            docker compose up -d &&
            docker image prune -af
          "
